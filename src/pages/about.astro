---
import Layout from '~/layouts/PageLayout.astro';
import Hero from '~/components/widgets/Hero.astro';
import headshot from '~/assets/images/headshot.jpg';

const metadata = {
  title: 'About — Jordan Armstrong',
  description:
    'Systems-minded experience designer bridging design and engineering in complex, enterprise environments.',
};
---

<Layout metadata={metadata}>
  <!-- Hero: short, credible intro (no stock image) -->
  <Hero
    actions={[
      { variant: 'primary', text: 'See examples', href: '/examples', icon: 'tabler:arrow-right' },
      { variant: 'secondary', text: 'Contact', href: '/contact' },
    ]}
    image={{ src: headshot, alt: 'Headshot of Jordan Armstrong, smiling, wearing a blue patterned shirt indoors.', width: 709, height: 669 }}
    tagline="About me"
  >
    <Fragment slot="title">
      From “mud to method”: a builder’s path into UX leadership.
    </Fragment>
    <Fragment slot="subtitle">
      I’m Jordan Armstrong, an experience designer who ships inside real-world constraints—security, legacy systems, and tight timelines. I translate between product and engineering, so work moves faster with less rework.
    </Fragment>
  </Hero>

  <!-- What I'm known for -->
  <section class="mx-auto max-w-5xl px-6 sm:px-8 py-10 sm:py-14">
    <h2 class="text-2xl sm:text-3xl font-semibold text-slate-900 dark:text-white">What I’m known for</h2>
        <div class="mt-6 grid gap-6 md:gap-8 md:grid-cols-3">
    <div
        class="group relative rounded-2xl
               bg-white/95 dark:bg-[rgb(34_36_39)]
               border border-slate-200/80 dark:border-[rgb(80_86_96)]
               p-6 shadow-[0_1px_0_0_rgba(16,24,40,0.04)]
               dark:shadow-[0_0_0_1px_rgba(255,255,255,0.04),0_10px_30px_-12px_rgba(0,0,0,0.6)]
               hover:shadow-md hover:border-slate-300 dark:hover:border-[rgb(110_118_129)]
               transition"
      >
        <span
          class="absolute left-0 top-4 bottom-4 w-1.5 rounded-r
                 opacity-60 group-hover:opacity-100
                 bg-[rgb(66_140_189)] dark:bg-[rgb(95_175_227)]
                 group-hover:bg-[rgb(199_132_90)] dark:group-hover:bg-[rgb(167_101_70)]"
        />
        <h3 class="font-semibold text-slate-900 dark:text-white">Systems thinking</h3>
        <p class="mt-2 text-slate-600 dark:text-[rgb(190_198_210)]">
          Tokens, components, and patterns that scale. I design like engineers build: modular, testable, and ready for change.
        </p>
      </div>


            <div
        class="group relative rounded-2xl
               bg-white/95 dark:bg-[rgb(34_36_39)]
               border border-slate-200/80 dark:border-[rgb(80_86_96)]
               p-6 shadow-[0_1px_0_0_rgba(16,24,40,0.04)]
               dark:shadow-[0_0_0_1px_rgba(255,255,255,0.04),0_10px_30px_-12px_rgba(0,0,0,0.6)]
               hover:shadow-md hover:border-slate-300 dark:hover:border-[rgb(110_118_129)]
               transition"
      >
        <span
          class="absolute left-0 top-4 bottom-4 w-1.5 rounded-r
                 opacity-60 group-hover:opacity-100
                 bg-[rgb(122_143_109)] dark:bg-[rgb(145_167_127)]   /* olive base */
                 group-hover:bg-[rgb(66_140_189)] dark:group-hover:bg-[rgb(95_175_227)]"
        />
        <h3 class="font-semibold text-slate-900 dark:text-white">Prototyping to learn</h3>
        <p class="mt-2 text-slate-600 dark:text-[rgb(190_198_210)]">
          Lowest fidelity that proves the riskiest thing. Clickable flows beat opinion wars.
        </p>
      </div>

      
      <div
        class="group relative rounded-2xl
               bg-white/95 dark:bg-[rgb(34_36_39)]
               border border-slate-200/80 dark:border-[rgb(80_86_96)]
               p-6 shadow-[0_1px_0_0_rgba(16,24,40,0.04)]
               dark:shadow-[0_0_0_1px_rgba(255,255,255,0.04),0_10px_30px_-12px_rgba(0,0,0,0.6)]
               hover:shadow-md hover:border-slate-300 dark:hover:border-[rgb(110_118_129)]
               transition"
      >
        <span
          class="absolute left-0 top-4 bottom-4 w-1.5 rounded-r
                 opacity-60 group-hover:opacity-100
                 bg-[rgb(199_132_90)] dark:bg-[rgb(167_101_70)]     /* terracotta base */
                 group-hover:bg-[rgb(122_143_109)] dark:group-hover:bg-[rgb(145_167_127)]"
        />
        <h3 class="font-semibold text-slate-900 dark:text-white">Tight, testable handoffs</h3>
        <p class="mt-2 text-slate-600 dark:text-[rgb(190_198_210)]">
          Clear AC, states, and traceability across UI ↔ API ↔ data. Less rework later.
        </p>
      </div>

    </div>
  </section>

  <!-- Approach: 4-step loop -->
  <section class="mx-auto max-w-5xl px-6 sm:px-8 py-10 sm:py-14">
    <h2 class="text-2xl sm:text-3xl font-semibold text-slate-900 dark:text-white">How I work</h2>

    <div class="mt-6 grid gap-6 md:grid-cols-4">
      <div class="rounded-2xl bg-white/95 dark:bg-[rgb(34_36_39)] border border-slate-200/80 dark:border-[rgb(80_86_96)] p-5">
        <h3 class="font-semibold">1. Frame the bet</h3>
        <p class="mt-1 text-sm text-slate-600 dark:text-[rgb(190_198_210)]">Define the decision and risk. Turn goals into testable questions & acceptance criteria.</p>
      </div>
      <div class="rounded-2xl bg-white/95 dark:bg-[rgb(34_36_39)] border border-slate-200/80 dark:border-[rgb(80_86_96)] p-5">
        <h3 class="font-semibold">2. Prototype to learn</h3>
        <p class="mt-1 text-sm text-slate-600 dark:text-[rgb(190_198_210)]">Prove the hardest thing first. Clickable flows over pixel-perfect polish.</p>
      </div>
      <div class="rounded-2xl bg-white/95 dark:bg-[rgb(34_36_39)] border border-slate-200/80 dark:border-[rgb(80_86_96)] p-5">
        <h3 class="font-semibold">3. Govern for speed</h3>
        <p class="mt-1 text-sm text-slate-600 dark:text-[rgb(190_198_210)]">Reuse tokens/components. Document just enough. Ship patterns, not one-offs.</p>
      </div>
      <div class="rounded-2xl bg-white/95 dark:bg-[rgb(34_36_39)] border border-slate-200/80 dark:border-[rgb(80_86_96)] p-5">
        <h3 class="font-semibold">4. Tight handoff</h3>
        <p class="mt-1 text-sm text-slate-600 dark:text-[rgb(190_198_210)]">Specs, edge cases, and traceability. Pair with dev; verify in staging.</p>
      </div>
    </div>

    <ul class="mt-8 grid gap-4 md:grid-cols-2">
      <li class="rounded-xl bg-white/80 dark:bg-[rgb(34_36_39)] border border-slate-200/70 dark:border-[rgb(80_86_96)] p-4">
        <strong>Principles:</strong> Evidence over opinions · Design inside constraints · Modularity wins · Clarity scales.
      </li>
      <li class="rounded-xl bg-white/80 dark:bg-[rgb(34_36_39)] border border-slate-200/70 dark:border-[rgb(80_86_96)] p-4">
        <strong>Tools/stack:</strong> Figma/FigJam, tokenized design systems, Angular/Material, API literacy, quick usability tests.
      </li>
    </ul>
  </section>

  <!-- Selected impact -->
  <section class="mx-auto max-w-5xl px-6 sm:px-8 py-10 sm:py-14">
  <h2 class="text-2xl sm:text-3xl font-semibold text-slate-900 dark:text-white">Selected impact</h2>

  <div class="mt-6 space-y-6">
    <!-- Access Control -->
    <article class="rounded-2xl bg-white/95 dark:bg-[rgb(34_36_39)]
                    border border-slate-200/80 dark:border-[rgb(80_86_96)] p-6
                    shadow-[0_1px_0_0_rgba(16,24,40,0.04)]
                    dark:shadow-[0_0_0_1px_rgba(255,255,255,0.04),0_10px_30px_-12px_rgba(0,0,0,0.6)]">
      <h3 class="font-semibold text-slate-900 dark:text-white">
        Access Control Flow — Untangling Permissions
      </h3>
      <p class="mt-1 text-slate-600 dark:text-[rgb(190_198_210)]">
        Role/group sprawl across identity systems made approvals unpredictable and hard to maintain.
        I mapped roles, groups, and approval paths with security + engineering, established a cleaner role taxonomy,
        and redesigned “Request access” to show who approves what and why.
      </p>
      <ul class="mt-3 list-disc pl-5 text-slate-700 dark:text-[rgb(210_217_226)]">
        <li>Access tickets reduced ~40% as paths became predictable.</li>
        <li>Exception code removed; flow scaled safely to new apps.</li>
        <li>Stakeholder confidence improved via transparent ownership.</li>
      </ul>
      <a href="/examples" class="mt-4 inline-flex items-center text-sm font-medium text-default hover:underline">See case →</a>
    </article>

    <!-- Product Catalog -->
    <article class="rounded-2xl bg-white/95 dark:bg-[rgb(34_36_39)]
                    border border-slate-200/80 dark:border-[rgb(80_86_96)] p-6
                    shadow-[0_1px_0_0_rgba(16,24,40,0.04)]
                    dark:shadow-[0_0_0_1px_rgba(255,255,255,0.04),0_10px_30px_-12px_rgba(0,0,0,0.6)]">
      <h3 class="font-semibold text-slate-900 dark:text-white">
        Product Catalog — Search &amp; Filter That Scales
      </h3>
      <p class="mt-1 text-slate-600 dark:text-[rgb(190_198_210)]">
        Flat tables, no filters, slow queries. I co-designed backend pagination + filter endpoints,
        prototyped discoverable filters, and wrote crisp AC for loading/empty/error states.
      </p>
      <ul class="mt-3 list-disc pl-5 text-slate-700 dark:text-[rgb(210_217_226)]">
        <li>Users found the right product in seconds; tickets dropped.</li>
        <li>Significant performance gains from scoped queries + pagination.</li>
        <li>Excel exports no longer a crutch; in-app catalog became primary.</li>
      </ul>
      <a href="/examples" class="mt-4 inline-flex items-center text-sm font-medium text-default hover:underline">See case →</a>
    </article>

    <!-- Environment Awareness -->
    <article class="rounded-2xl bg-white/95 dark:bg-[rgb(34_36_39)]
                    border border-slate-200/80 dark:border-[rgb(80_86_96)] p-6
                    shadow-[0_1px_0_0_rgba(16,24,40,0.04)]
                    dark:shadow-[0_0_0_1px_rgba(255,255,255,0.04),0_10px_30px_-12px_rgba(0,0,0,0.6)]">
      <h3 class="font-semibold text-slate-900 dark:text-white">
        Environment Awareness — Preventing Risky Mistakes
      </h3>
      <p class="mt-1 text-slate-600 dark:text-[rgb(190_198_210)]">
        Test and Prod looked identical. I added clear visual cues (color-coded headers, environment badges, confirm states),
        and AC requiring environment state on every critical action.
      </p>
      <ul class="mt-3 list-disc pl-5 text-slate-700 dark:text-[rgb(210_217_226)]">
        <li>Zero cross-environment incidents after rollout.</li>
        <li>QA/release moved faster with higher confidence.</li>
        <li>Leaders cited it as a small change with outsized risk reduction.</li>
      </ul>
      <a href="/examples" class="mt-4 inline-flex items-center text-sm font-medium text-default hover:underline">See case →</a>
    </article>
  </div>
</section>

  <!-- CTA -->
  <section class="mx-auto max-w-5xl px-6 sm:px-8 py-10 sm:py-16">
    <div
      class="rounded-3xl border border-slate-200/70 dark:border-[rgb(80_86_96)]
             p-8 sm:p-10 text-center
             bg-white/95 dark:bg-[rgb(34_36_39)]
             shadow-[0_1px_0_0_rgba(16,24,40,0.04)]
             dark:shadow-[0_0_0_1px_rgba(255,255,255,0.04),0_10px_30px_-12px_rgba(0,0,0,0.6)]"
    >
      <h2 class="text-2xl sm:text-3xl font-semibold text-slate-900 dark:text-white">
        Want the detailed breakdown?
      </h2>
      <p class="mt-3 text-slate-600 dark:text-[rgb(190_198_210)]">
        I'd love to discuss in more detail or share my approach.
      </p>

      <div class="mt-6 flex items-center justify-center gap-3">
        <a
          href="/examples"
          class="inline-flex items-center justify-center rounded-3xl
                 bg-primary text-white px-5 py-2.5 font-medium
                 hover:bg-[var(--aw-color-primary-soft)] transition"
        >See examples</a>

        <a
          href="/contact"
          class="inline-flex items-center justify-center rounded-3xl
                 border border-slate-300 dark:border-[rgb(110_118_129)]
                 text-default px-5 py-2.5 font-medium
                 hover:bg-[rgb(66_140_189/0.06)] dark:hover:bg-[rgb(66_140_189/0.18)]
                 transition"
        >Get in touch</a>
      </div>
    </div>
  </section>
</Layout>
