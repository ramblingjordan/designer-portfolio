---
import Layout from '~/layouts/PageLayout.astro';
import Hero from '~/components/widgets/Hero.astro'
import { Image } from 'astro:assets';
import envAwareness from '~/assets/images/envaware.png';
import filter from '~/assets/images/filter.png';
import untangle from '~/assets/images/untangle.png';
import light from '~/assets/images/light.jpg';

const metadata = {
  title: 'Examples — Jordan Armstrong',
  description: 'Concise case studies: situation → what I did → outcomes → artifacts.',
};

const cases = [
  {
    title: 'Access Control Flow — Untangling Permissions',
    tags: ['Enterprise', 'Security', 'Governance'],
    situation:
      'Role/group sprawl across identity systems made approvals unpredictable. Engineers hard-coded exceptions; owners didn’t trust the workflow.',
    did: [
      'Mapped roles, groups, and approval paths across apps with security + engineering.',
      'Defined a cleaner role taxonomy and ownership model; reflected it in UI copy and steps.',
      'Redesigned “Request access” to show who approves what and why (no more black box).',
    ],
    outcome: [
      'Access tickets reduced ~40% as paths became predictable.',
      'Engineering removed exception code; flow scaled to new apps safely.',
      'Stakeholder confidence increased due to transparent rules/ownership.',
    ],
    thumbs: [untangle],
  },
  {
    title: 'Product Catalog — Search & Filter That Scales',
    tags: ['UX', 'API Alignment', 'Performance'],
    situation:
      'Hundreds of digital products were dumped in a flat table—no filters, slow queries, and users defaulted to “export to Excel.”',
    did: [
      'Co-designed backend pagination + filter endpoints (type, visibility, PCI status).',
      'Prototyped discoverable filters and wrote crisp AC for loading/empty/error states.',
      'Validated flow with quick usability checks before coding.',
    ],
    outcome: [
      'Users found the right product in seconds; support tickets dropped.',
      'Significant perf gains from scoped queries and pagination.',
      'Excel exports no longer a crutch; in-app catalog became primary.',
    ],
    thumbs: [filter],
  },
  {
    title: 'Environment Awareness — Preventing Risky Mistakes',
    tags: ['Trust', 'Safety Rails', 'Operations'],
    situation:
      'Test and Prod looked identical; critical actions were sometimes triggered in the wrong environment.',
    did: [
      'Added clear visual cues (color-coded headers, environment badges, confirm states).',
      'Wrote AC that every critical action displays environment state explicitly.',
      'Prototyped several versions to balance prominence with low noise.',
    ],
    outcome: [
      'Zero cross-environment incidents after rollout.',
      'QA/release moved faster with higher confidence.',
      'Leaders cited it as a small change with outsized risk reduction.',
    ],
    thumbs: [envAwareness],
  },
];
---

<Layout metadata={metadata}>
  <!-- Header -->
  <!-- Hero -->
  
<Hero tagline="Examples"
      image={{ src: light, alt: 'Jordan Armstrong', width: 1024, height: 768 }}
>
    <Fragment slot="title">Case studies in practice</Fragment>
    <Fragment slot="subtitle">
      Real examples of how I bridge design and engineering under enterprise constraints.
      Each one highlights <em>systems thinking, pragmatic prototyping,</em> and <em>tight handoffs</em>.
    </Fragment>
  </Hero>
  <!-- Cases grid -->
  <section class="mx-auto max-w-5xl px-6 sm:px-8 pb-10 sm:pb-16">
    <div class="grid gap-6 md:gap-8 md:grid-cols-3">
      {cases.map((c) => (
        <article
          class="group rounded-2xl bg-white/95 dark:bg-[rgb(34_36_39)]
                 border border-slate-200/80 dark:border-[rgb(80_86_96)]
                 p-6 flex flex-col
                 shadow-[0_1px_0_0_rgba(16,24,40,0.04)]
                 dark:shadow-[0_0_0_1px_rgba(255,255,255,0.04),0_10px_30px_-12px_rgba(0,0,0,0.6)]
                 hover:shadow-md hover:border-slate-300 dark:hover:border-[rgb(110_118_129)]
                 transition"
        >
          <header class="mb-2">
            <h2 class="text-lg font-semibold text-slate-900 dark:text-white">{c.title}</h2>
            <ul class="mt-2 flex flex-wrap gap-1.5">
              {c.tags.map((t) => (
                <li class="rounded-full px-2.5 py-0.5 text-xs border border-slate-300 dark:border-[rgb(110_118_129)] bg-white/70 dark:bg-[rgb(34_36_39)] text-default">{t}</li>
              ))}
            </ul>
          </header>

          <p class="mt-1 text-sm text-slate-600 dark:text-[rgb(190_198_210)]">
            <strong>Situation:</strong> {c.situation}
          </p>

          <div class="mt-3">
            <p class="text-sm font-medium text-default">What I did</p>
            <ul class="mt-1 list-disc pl-5 text-sm text-slate-700 dark:text-[rgb(210_217_226)]">
              {c.did.map((d) => <li>{d}</li>)}
            </ul>
          </div>

          <div class="mt-3">
            <p class="text-sm font-medium text-default">Outcomes</p>
            <ul class="mt-1 list-disc pl-5 text-sm text-slate-700 dark:text-[rgb(210_217_226)]">
              {c.outcome.map((o) => <li>{o}</li>)}
            </ul>
          </div>

            {c.thumbs?.length ? (
            <div class="mt-4">
                {c.thumbs.map((thumb) => (
                <Image
                    src={thumb}
                    alt={`${c.title} mockup`}
                    class=" rounded-xl border border-slate-200/70 dark:border-[rgb(80_86_96)] object-cover"
                />
                ))}
            </div>
            ) : null}

        </article>
      ))}
    </div>
  </section>

  <!-- Footer CTA -->
  <section class="mx-auto max-w-5xl px-6 sm:px-8 pb-12 sm:pb-20">
    <div class="rounded-3xl border border-slate-200/70 dark:border-[rgb(80_86_96)] p-8 sm:p-10 text-center bg-white/95 dark:bg-[rgb(34_36_39)]">
      <h2 class="text-2xl sm:text-3xl font-semibold text-slate-900 dark:text-white">Want a deep dive?</h2>
      <p class="mt-3 text-slate-600 dark:text-[rgb(190_198_210)]">Reach out to discuss in more details or read about my approach.</p>
      <div class="mt-6 flex items-center justify-center gap-3">
        <a href="/contact" class="inline-flex items-center justify-center rounded-3xl bg-primary text-white px-5 py-2.5 font-medium hover:bg-[var(--aw-color-primary-soft)] transition">Get in touch</a>
        <a href="/approach" class="inline-flex items-center justify-center rounded-3xl border border-slate-300 dark:border-[rgb(110_118_129)] text-default px-5 py-2.5 font-medium hover:bg-[rgb(66_140_189/0.06)] dark:hover:bg-[rgb(66_140_189/0.18)] transition">See my approach</a>
      </div>
    </div>
  </section>
</Layout>
